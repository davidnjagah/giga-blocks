{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/platform-fastify\"","webpack:///external commonjs \"@fastify/helmet\"","webpack:///./src/app.module.ts","webpack:///external commonjs \"@nestjs/bull\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/auth/auth.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/auth/auth.controller.ts","webpack:///external commonjs \"otplib\"","webpack:///./src/auth/auth.service.ts","webpack:///./src/mailer/mailer.service.ts","webpack:///./src/mailer/constants/index.ts","webpack:///./src/mailer/constants/mail.constant.ts","webpack:///external commonjs \"bull\"","webpack:///./src/mailer/config/bullOptions.ts","webpack:///./src/users/users.service.ts","webpack:///./src/prisma/prisma.service.ts","webpack:///external commonjs \"@prisma/client\"","webpack:///./src/utils/string-format.ts","webpack:///./src/auth/dto/index.ts","webpack:///./src/auth/dto/auth.dto.ts","webpack:///external commonjs \"@nestjs/swagger\"","webpack:///external commonjs \"class-validator\"","webpack:///./src/users/dto/user.dto.ts","webpack:///external commonjs \"@nestjs/mapped-types\"","webpack:///./src/auth/guards/local.auth.guard.ts","webpack:///external commonjs \"@nestjs/passport\"","webpack:///./src/common/decorators/public.decorator.ts","webpack:///./src/auth/guards/refresh.auth.guard.ts","webpack:///./src/auth/strategies/index.ts","webpack:///./src/auth/strategies/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///./src/auth/strategies/local.strategy.ts","webpack:///external commonjs \"passport-local\"","webpack:///./src/auth/strategies/refresh.strategy.ts","webpack:///./src/mailer/mailer.module.ts","webpack:///external commonjs \"@nestjs-modules/mailer\"","webpack:///./src/mailer/processors/index.ts","webpack:///./src/mailer/processors/mail.processor.ts","webpack:///external commonjs \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\"","webpack:///./src/prisma/prisma.module.ts","webpack:///./src/schools/schools.module.ts","webpack:///./src/schools/schools.service.ts","webpack:///./src/utils/paginate.ts","webpack:///./src/schools/schools.controller.ts","webpack:///./src/schools/dto/update-schools.dto.ts","webpack:///./src/schools/dto/create-schools.dto.ts","webpack:///./src/schools/dto/list-schools.dto.ts","webpack:///./src/users/users.module.ts","webpack:///./src/users/users.controller.ts","webpack:///./src/auth/guards/jwt.auth.guard.ts","webpack:///./src/auth/guards/role.guard.ts","webpack:///./src/common/decorators/roles.decorator.ts","webpack:///./src/contribute/contribute.module.ts","webpack:///./src/contribute/contribute.service.ts","webpack:///./src/points/points.service.ts","webpack:///./src/contribute/contribute.controller.ts","webpack:///./src/contribute/dto/create-contribute-datum.dto.ts","webpack:///./src/contribute/dto/update-contribute-datum.dto.ts","webpack:///./src/seasons/seasons.module.ts","webpack:///./src/seasons/seasons.service.ts","webpack:///./src/seasons/seasons.controller.ts","webpack:///./src/seasons/dto/create-seasons.dto.ts","webpack:///./src/points/points.module.ts","webpack:///./src/points/points.controller.ts","webpack:///./src/points/dto/create-point.dto.ts","webpack:///./src/points/dto/update-point.dto.ts","webpack:///./src/points/entities/point.entity.ts","webpack:///./src/utils/exceptions/exception.filter.ts","webpack:///external commonjs \"class-transformer\"","webpack:///./src/utils/exceptions/exception.ts","webpack:///./src/utils/exceptions/prisma-exception.ts","webpack:///./src/swagger.ts","webpack:///./src/auth/guards/auth.global.guard.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/platform-fastify\");","module.exports = require(\"@fastify/helmet\");","import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bull';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { MailModule } from './mailer/mailer.module';\nimport { SchoolModule } from './schools/schools.module';\nimport { UsersModule } from './users/users.module';\nimport { ContributeDataModule } from './contribute/contribute.module';\nimport { SeasonModule } from './seasons/seasons.module';\nimport { PointsModule } from './points/points.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        redis: {\n          host: configService.get<string>('REDIS_HOST'),\n          port: +configService.get<number>('REDIS_PORT'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    PrismaModule,\n    MailModule,\n    SchoolModule,\n    UsersModule,\n    ContributeDataModule,\n    SeasonModule,\n    PointsModule,\n  ],\n  providers: [],\n})\nexport class AppModule {}\n","module.exports = require(\"@nestjs/bull\");","module.exports = require(\"@nestjs/config\");","import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { JWTStrategy, RefreshJWTStrategy, LocalStrategy } from './strategies';\nimport { MailModule } from 'src/mailer/mailer.module';\n\n@Module({\n  imports: [\n    MailModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET_KEY,\n      signOptions: { expiresIn: +process.env.JWT_EXPIRATION_TIME },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, UsersService, LocalStrategy, JWTStrategy, RefreshJWTStrategy],\n})\nexport class AuthModule {}\n","module.exports = require(\"@nestjs/jwt\");","import { Body, Controller, Post, Request, UseGuards } from '@nestjs/common';\nimport { totp } from 'otplib';\n\nimport { AuthService } from './auth.service';\n\nimport { AuthDto, AuthSendOtp, RefreshToken } from './dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateUserDto } from '../users/dto/user.dto';\n\nimport { LocalAuthGuard } from './guards/local.auth.guard';\nimport { Public } from '../common/decorators/public.decorator';\nimport { RefreshJWTGuard } from './guards/refresh.auth.guard';\n\nimport { ResponseMessage, Tokens } from './types';\n\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {\n    totp.options = {\n      step: +process.env.OTP_DURATION_IN_SECS,\n    };\n  }\n\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() req): Promise<CreateUserDto & Tokens> {\n    return await this.authService.login(req.user);\n  }\n\n  @Public()\n  @Post('register')\n  register(@Body() createUserDto: CreateUserDto): Promise<ResponseMessage | null> {\n    return this.authService.register(createUserDto);\n  }\n\n  @Public()\n  @Post('send-otp')\n  async sendOtp(@Body() AuthDto: AuthSendOtp): Promise<ResponseMessage | null> {\n    return this.authService.sendOtp(AuthDto);\n  }\n\n  @Public()\n  @UseGuards(RefreshJWTGuard)\n  @Post('refresh')\n  async refresh(\n    @Request() req,\n    @Body() RefreshToken: RefreshToken,\n  ): Promise<Omit<Tokens, 'refresh_token'>> {\n    return this.authService.refreshToken(req.user);\n  }\n}\n","module.exports = require(\"otplib\");","import { BadRequestException, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { totp } from 'otplib';\n\nimport { MailService } from '../mailer/mailer.service';\nimport { UsersService } from '../users/users.service';\n\nimport { CreateUserDto } from '../users/dto/user.dto';\nimport { AuthDto } from './dto';\n@Injectable()\nexport class AuthService {\n  private readonly _logger = new Logger('Auth Service');\n  constructor(\n    private jwtService: JwtService,\n    private userService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  async validateUser(email: string, otp: string): Promise<CreateUserDto> {\n    const user = await this.userService.findOneByEmail(email);\n    if (user && user?.isActive && totp.verify({ token: otp, secret: process.env.OTP_SECRET })) {\n      return user;\n    }\n    throw new NotFoundException('User not found');\n  }\n\n  async register(createUserDto: CreateUserDto) {\n    const user = await this.userService.register(createUserDto);\n    if (user) {\n      this.mailService.welcome({ email: user?.email, name: user?.name });\n      return { success: true, msg: 'User created successfully' };\n    }\n    throw new BadRequestException('Bad Request');\n  }\n\n  async sendOtp(AuthDto: Omit<AuthDto, 'otp'>) {\n    this._logger.log(`Sending Login OTP to ${AuthDto?.email}`);\n    const { email } = AuthDto;\n    const user = await this.userService.findOneByEmail(email);\n    if (user && user?.isActive) {\n      this._logger.log(`Generating Login OTP to ${AuthDto?.email}`);\n      const token = totp.generate(process.env.OTP_SECRET);\n      if (token) {\n        this.mailService.sendOTP({ email: user?.email, otp: token });\n        return { success: true, msg: 'OTP sent successfully' };\n      }\n    }\n    throw new NotFoundException('User not found');\n  }\n\n  async login(user: any) {\n    this._logger.log(`Sending tokens to ${user?.email}`);\n    const payload = {\n      id: user.id,\n      sub: {\n        email: user.email,\n        name: user.name,\n        walletAddress: user.walletAddress,\n        // role_id: user.role_id,\n        roles: user.roles,\n      },\n    };\n    return {\n      ...user,\n      access_token: this.jwtService.sign(payload),\n      refresh_token: this.jwtService.sign(payload, {\n        expiresIn: +process.env.JWT_EXPIRATION_LONG_TIME,\n      }),\n    };\n  }\n\n  async refreshToken(user: any) {\n    this._logger.log(`Generating access token to ${user?.email}`);\n    const payload = {\n      id: user.id,\n      sub: {\n        email: user.email,\n        name: user.name,\n        walletAddress: user.walletAddress,\n        // role_id: user.role_id,\n        roles: user.roles,\n      },\n    };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n","import { Injectable, Logger } from '@nestjs/common';\nimport { SENT_OTP, MAIL_QUEUE, WELCOME_MSG } from './constants';\nimport { Queue } from 'bull';\nimport { InjectQueue } from '@nestjs/bull';\nimport { jobOptions } from './config/bullOptions';\n\n@Injectable()\nexport class MailService {\n  private readonly _logger = new Logger(MailService.name);\n\n  constructor(@InjectQueue(MAIL_QUEUE) private readonly _mailQueue: Queue) {}\n\n  public async sendOTP({ email, otp }: { email: string; otp: string }): Promise<void> {\n    try {\n      await this._mailQueue.add(\n        SENT_OTP,\n        {\n          email,\n          otp,\n        },\n        jobOptions,\n      );\n    } catch (error) {\n      this._logger.error(`Error queueing registration email to user ${email}`);\n      throw error;\n    }\n  }\n\n  public async welcome({ name, email }: { name: string; email: string }): Promise<void> {\n    try {\n      await this._mailQueue.add(\n        WELCOME_MSG,\n        {\n          name,\n          email,\n        },\n        jobOptions,\n      );\n    } catch (error) {\n      this._logger.error(`Error queueing registration email to user ${email}`);\n      throw error;\n    }\n  }\n}\n","export * from './mail.constant';\n","export const MAIL_QUEUE = 'MAIL_QUEUE';\nexport const SENT_OTP = 'SENT_OTP';\nexport const WELCOME_MSG = 'WELCOME_MSG';\n","module.exports = require(\"bull\");","import { JobOptions } from 'bull';\n\nexport const jobOptions: JobOptions = {\n  attempts: 3,\n  removeOnComplete: 20,\n  backoff: {\n    type: 'exponential',\n    delay: 1000,\n  },\n};\n","import { Injectable, Logger } from '@nestjs/common';\nimport { CreateUserDto, UpdateUserDto } from './dto/user.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { hexStringToBuffer } from '../utils/string-format';\n\n@Injectable()\nexport class UsersService {\n  private readonly _logger = new Logger('User Services');\n  constructor(private prisma: PrismaService) {}\n\n  async register(createUserDto: CreateUserDto) {\n    this._logger.log(`Registering new user: ${createUserDto?.email}`);\n    const walletAddress = hexStringToBuffer(createUserDto?.walletAddress);\n    return this.prisma.user.create({\n      data: {\n        ...createUserDto,\n        walletAddress,\n      },\n    });\n  }\n\n  async addValidator(createUserDto: CreateUserDto) {\n    this._logger.log(`Creating new user: ${createUserDto?.email}`);\n    const walletAddress = hexStringToBuffer(createUserDto?.walletAddress);\n    return this.prisma.user.create({\n      data: {\n        ...createUserDto,\n        walletAddress,\n        roles: ['VALIDATOR'],\n      },\n    });\n  }\n\n  findAll() {\n    return this.prisma.user.findMany();\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    this._logger.log(`Updating user: ${id}`);\n    return `This action updates a #${id} user with payload ${updateUserDto}`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n\n  async findOneByEmail(email: string): Promise<any> {\n    return await this.prisma.user.findUnique({\n      where: { email },\n    });\n  }\n\n  async requestValidator(createUserDto: CreateUserDto) {\n    return await this.prisma.user.create({\n      data: {\n        email: createUserDto?.email,\n        roles: ['PENDING'],\n        name: createUserDto?.name,\n      },\n    });\n  }\n\n  async approveValidator(id: string) {\n    return await this.prisma.user.update({\n      where: {\n        id,\n      },\n      data: {\n        roles: ['VALIDATOR'],\n      },\n    });\n  }\n}\n","import { Injectable, OnModuleDestroy, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor() {\n    super({\n      datasources: {\n        db: {\n          url: process.env.APP_DATABASE_URL,\n        },\n      },\n    });\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n\n  async cleanDatabase() {\n    if (process.env.NODE_ENV === 'production') return;\n    // teardown logic\n    return Promise.all([this.user.deleteMany()]);\n  }\n}\n","module.exports = require(\"@prisma/client\");","export function replaceWith(str: string | any, replaceWith: string): any {\n  return str\n    .trim()\n    .toUpperCase()\n    .replace(/[-\\s]+/g, replaceWith);\n}\n\nexport function hexStringToBuffer(str: string): Buffer {\n  if (!str) return;\n  return Buffer.from(str.substring(2), 'hex');\n}\n\nexport function bufferToHexString(buffer: Buffer): string {\n  if (!buffer) return;\n  return `0x${buffer.toString('hex')}`;\n}\n\nexport const stringifyWithBigInt = (obj: any): any => {\n  const jsonString = JSON.stringify(obj, (_, value) => {\n    if (typeof value === 'bigint') {\n      return value.toString(); // Convert BigInt to string\n    }\n    return value; // Return other values unchanged\n  });\n\n  return JSON.parse(jsonString); // Parse the stringified JSON\n};\n","export * from './auth.dto';\n","import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class AuthDto {\n  @ApiProperty({\n    example: 'email@email.com',\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: '123456',\n  })\n  @IsString()\n  otp: string;\n}\n\nexport class AuthSendOtp {\n  @ApiProperty({\n    example: 'email@email.com',\n  })\n  @IsEmail()\n  email: string;\n}\n\nexport class RefreshToken {\n  @ApiProperty({\n    example: 'dnsfb6829uhfjhbeiwy89ufgo',\n  })\n  @IsString()\n  refresh_token: string;\n}\n","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"class-validator\");","import { PartialType } from '@nestjs/mapped-types';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsEmail, IsOptional, IsEthereumAddress } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  @ApiProperty({\n    description: 'Email of the user',\n    example: 'john@doe.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'Full Name of the user',\n    example: 'John Doe',\n  })\n  name: string;\n\n  @IsEthereumAddress()\n  @IsOptional()\n  @ApiProperty({\n    description: 'Ethereum wallet address of the user',\n    example: '0xC67c60cD6d82Fcb2fC6a9a58eA62F80443E32683',\n  })\n  walletAddress: string;\n\n  @IsArray()\n  @IsOptional()\n  @ApiProperty({\n    description: 'Array of roles associated with the user',\n    example: '[\"USER\"]',\n  })\n  roles?: [];\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n","module.exports = require(\"@nestjs/mapped-types\");","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n","module.exports = require(\"@nestjs/passport\");","import { SetMetadata } from '@nestjs/common';\n\nexport const Public = () => SetMetadata('isPublic', true);\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshJWTGuard extends AuthGuard('jwt-refresh') {}\n","export * from './jwt.strategy';\nexport * from './local.strategy';\nexport * from './refresh.strategy';\n","import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JWTStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET_KEY,\n    });\n  }\n  async validate(payload: any) {\n    const { id, sub } = payload;\n    return { id, ...sub };\n  }\n}\n","module.exports = require(\"passport-jwt\");","import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email', passwordField: 'otp' });\n  }\n\n  async validate(email: string, otp: string): Promise<any> {\n    const user = await this.authService.validateUser(email, otp);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n","module.exports = require(\"passport-local\");","import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nexport class RefreshJWTStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromBodyField('refresh'),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET_KEY,\n    });\n  }\n  async validate(payload: any) {\n    const { id, sub } = payload;\n    return { id, ...sub };\n  }\n}\n","import { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bull';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { Module } from '@nestjs/common';\nimport { MailProcessor } from './processors';\nimport { MailService } from './mailer.service';\n\nimport { MAIL_QUEUE } from './constants';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\n@Module({\n  imports: [\n    ConfigModule,\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          port: +configService.get('SMTP_PORT'),\n          secure: true,\n          auth: {\n            user: configService.get('EMAIL_ADDRESS'),\n            pass: configService.get('EMAIL_PASSWORD'),\n          },\n        },\n        defaults: { from: '\"No Reply\" <no-reply@rumsan.com>' },\n        template: {\n          dir: __dirname + '/templates',\n          adapter: new HandlebarsAdapter(),\n          options: { strict: true },\n        },\n      }),\n    }),\n    BullModule.registerQueue({\n      name: MAIL_QUEUE,\n    }),\n  ],\n  providers: [MailProcessor, MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n","module.exports = require(\"@nestjs-modules/mailer\");","export * from './mail.processor';\n","import { Injectable, Logger } from '@nestjs/common';\nimport { Job } from 'bull';\nimport { OnQueueActive, OnQueueCompleted, OnQueueFailed, Process, Processor } from '@nestjs/bull';\nimport { SENT_OTP, MAIL_QUEUE, WELCOME_MSG } from '../constants';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\n@Processor(MAIL_QUEUE)\nexport class MailProcessor {\n  private readonly _logger = new Logger(MailProcessor.name);\n\n  constructor(\n    private readonly _mailerService: MailerService,\n    private readonly _configService: ConfigService,\n  ) {}\n\n  @OnQueueActive()\n  public onActive(job: Job) {\n    this._logger.debug(`Processing job ${job.id} of type ${job.name}`);\n  }\n\n  @OnQueueCompleted()\n  public onComplete(job: Job) {\n    this._logger.debug(`Completed job ${job.id} of type ${job.name}`);\n  }\n\n  @OnQueueFailed()\n  public onError(job: Job<any>, error: any) {\n    this._logger.error(`Failed job ${job.id} of type ${job.name}: ${error.message}`, error.stack);\n    try {\n      return this._mailerService.sendMail({\n        to: this._configService.get('EMAIL_ADDRESS'),\n        from: this._configService.get('EMAIL_ADDRESS'),\n        subject: 'Something went wrong with server!!',\n        template: './error',\n        context: {},\n      });\n    } catch {\n      this._logger.error('Failed to send confirmation email to admin');\n    }\n  }\n\n  @Process(SENT_OTP)\n  public async sendOTP(job: Job<{ email: string; otp: string }>) {\n    this._logger.log(`Sending otp email to '${job.data.email}'`);\n\n    try {\n      return this._mailerService.sendMail({\n        to: job.data.email,\n        from: this._configService.get('EMAIL_ADDRESS'),\n        subject: 'Sign In OTP',\n        template: './otp',\n        context: { name: job.data.email, otp: job.data.otp },\n      });\n    } catch {\n      this._logger.error(`Failed to send confirmation email to '${job.data.email}'`);\n    }\n  }\n\n  @Process(WELCOME_MSG)\n  public async welcome(job: Job<{ email: string; name: string }>) {\n    this._logger.log(`Sending welcome email to '${job.data.email}'`);\n\n    try {\n      return this._mailerService.sendMail({\n        to: job.data.email,\n        from: this._configService.get('EMAIL_ADDRESS'),\n        subject: 'Greetings from GIGA NFT2.0',\n        template: './welcome',\n        context: { name: job.data.name },\n      });\n    } catch {\n      this._logger.error(`Failed to send confirmation email to '${job.data.email}'`);\n    }\n  }\n}\n","module.exports = require(\"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\");","import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n","import { Module } from '@nestjs/common';\nimport { SchoolService } from './schools.service';\nimport { SchoolController } from './schools.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n","import { Injectable, Logger } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { UpdateSchoolDto } from './dto/update-schools.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ListSchoolDto } from './dto/list-schools.dto';\nimport { paginate } from 'src/utils/paginate';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) {}\n\n  async findAll(query: ListSchoolDto) {\n    const { page, perPage } = query;\n    const where: Prisma.SchoolWhereInput = {\n      deletedAt: null,\n    };\n\n    return paginate(\n      this.prisma.school,\n      { where },\n      {\n        page,\n        perPage,\n      },\n    );\n  }\n\n  async findOne(id: string) {\n    return await this.prisma.school.findUnique({\n      where: {\n        giga_id_school: id,\n      },\n    });\n  }\n\n  async byCountry(country: string) {\n    const firstLetter = country.charAt(0);\n    if (firstLetter === firstLetter.toUpperCase()) {\n      return await this.prisma.school.findMany({\n        where: {\n          location: country,\n        },\n      });\n    } else {\n      const capitalizedLetter = firstLetter.toUpperCase();\n      const restOfTheString = country.slice(1);\n      return await this.prisma.school.findMany({\n        where: {\n          location: `${capitalizedLetter}${restOfTheString}`,\n        },\n      });\n    }\n  }\n\n  update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    return `This action updates a #${id} school`;\n  }\n\n  async removeAll() {\n    return await this.prisma.school.deleteMany();\n  }\n}\n","export interface PaginatedResult<T> {\n  rows: T[];\n  meta: {\n    total: number;\n    lastPage: number;\n    currentPage: number;\n    perPage: number;\n  };\n}\n\nexport type PaginateOptions = {\n  page?: number | string;\n  perPage?: number | string;\n  transformRows?: (rows: any[]) => any[];\n};\nexport type PaginateFunction = <T, K>(\n  model: any,\n  args?: K,\n  options?: PaginateOptions,\n) => Promise<PaginatedResult<T>>;\n\nconst paginator = (defaultOptions: PaginateOptions): PaginateFunction => {\n  return async (model, args: any = { where: undefined }, options) => {\n    const page = Number(options?.page || defaultOptions?.page) || 1;\n    const perPage = Number(options?.perPage || defaultOptions?.perPage) || 10;\n\n    const skip = page > 0 ? perPage * (page - 1) : 0;\n    const [total, rows] = await Promise.all([\n      model.count({ where: args.where }),\n      model.findMany({\n        ...args,\n        take: perPage,\n        skip,\n      }),\n    ]);\n    const lastPage = Math.ceil(total / perPage);\n    const meta = {\n      total,\n      lastPage,\n      currentPage: page,\n      perPage,\n    };\n\n    if (options?.transformRows) {\n      return {\n        rows: options.transformRows(rows),\n        meta,\n      };\n    }\n\n    return {\n      rows,\n      meta,\n    };\n  };\n};\n\nexport const paginate: PaginateFunction = paginator({ perPage: 20 });\n","import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Logger } from '@nestjs/common';\nimport { SchoolService } from './schools.service';\nimport { UpdateSchoolDto } from './dto/update-schools.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ListSchoolDto } from './dto/list-schools.dto';\n\n@Controller('schools')\n@ApiTags('School')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Get()\n  findAll(@Query() query: ListSchoolDto) {\n    return this.schoolService.findAll(query);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.schoolService.findOne(`${id}`);\n  }\n\n  @Get('byCountry/:country')\n  findByCountry(@Param('country') country: string) {\n    return this.schoolService.byCountry(`${country}`);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete()\n  removeAll() {\n    return this.schoolService.removeAll();\n  }\n}\n","import { PartialType } from '@nestjs/swagger';\nimport { CreateSchoolDto } from './create-schools.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n","export class CreateSchoolDto {}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class ListSchoolDto {\n  @ApiProperty({\n    description: 'Page to load',\n    example: '1',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  page?: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  perPage?: string;\n}\n","import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n","import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto, UpdateUserDto } from './dto/user.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt.auth.guard';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from 'src/auth/guards/role.guard';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport { Public } from 'src/common/decorators/public.decorator';\n\n@ApiBearerAuth('access-token')\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Roles('ADMIN')\n  @Post('addValidator')\n  @ApiOperation({ summary: 'Create new user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  addValidator(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.addValidator(createUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Roles('ADMIN')\n  @Get()\n  @ApiOperation({ summary: 'List all user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Roles('ADMIN')\n  @Get(':id')\n  @ApiOperation({ summary: 'Get an user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Roles('ADMIN')\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update an user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Roles('ADMIN')\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete an user' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n\n  @Public()\n  @Post('requestValidator')\n  @ApiOperation({ summary: 'Request for an admin for validator' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  requestValidator(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.requestValidator(createUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Roles('ADMIN')\n  @Patch('approveValidator/:id')\n  @ApiOperation({ summary: 'Approve a user for validator' })\n  @ApiResponse({\n    status: 200,\n    description: 'The found record',\n    type: [CreateUserDto],\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  approveValidator(@Param('id') id: string) {\n    return this.usersService.approveValidator(id);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  matchRoles(roles: string[], userRole: string[]) {\n    return roles.some(role => role.toString() === userRole.toString());\n  }\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get<string[]>('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    return this.matchRoles(roles, user.roles);\n  }\n}\n","import { SetMetadata } from '@nestjs/common';\nimport { Roles as RoleType } from '../types/roles';\n\nexport const Roles = (...args: RoleType[]) => SetMetadata('roles', args);\n","import { Module } from '@nestjs/common';\nimport { ContributeDataService } from './contribute.service';\nimport { ContributeDataController } from './contribute.controller';\nimport { PointsService } from 'src/points/points.service';\n\n@Module({\n  controllers: [ContributeDataController],\n  providers: [ContributeDataService, PointsService],\n})\nexport class ContributeDataModule {}\n","import {\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateContributeDatumDto } from './dto/create-contribute-datum.dto';\nimport { UpdateContributeDatumDto } from './dto/update-contribute-datum.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { PointsService } from '../points/points.service';\nimport { CreatePointDto } from 'src/points/dto/create-point.dto';\nimport { LeaderBoardType, ContributionType, VOTE_TYPE } from '@prisma/client';\nimport { Status } from '@prisma/client';\n\n@Injectable()\nexport class ContributeDataService {\n  private readonly _logger = new Logger(ContributeDataService.name);\n  constructor(private prisma: PrismaService, private pointsService: PointsService) {}\n\n  async create(createContributeDatumDto: CreateContributeDatumDto) {\n    const createdData = await this.prisma.contributedData.create({\n      data: { ...createContributeDatumDto },\n    });\n    return createdData;\n  }\n\n  async findAll() {\n    const data = await this.prisma.contributedData.findMany();\n    return data;\n  }\n\n  async findOne(id: string) {\n    const data = await this.prisma.contributedData.findUnique({\n      where: { contributed_UUID: id },\n    });\n    if (!data) {\n      throw new NotFoundException('Contributed data with such ID not found');\n    }\n    return data;\n  }\n\n  async update(id: string, updateContributeDatumDto: UpdateContributeDatumDto) {\n    const updatedData = await this.prisma.contributedData.update({\n      where: { contributed_UUID: id },\n      data: updateContributeDatumDto,\n    });\n    return updatedData;\n  }\n\n  async remove(id: string) {\n    const deletedData = await this.prisma.contributedData.delete({\n      where: { contributed_UUID: id },\n    });\n    if (deletedData) {\n      return 'Contributed data deleted successfully.';\n    }\n  }\n\n  async upvote(id: string, user: any) {\n    try {\n      const contributedData = await this.findOne(id);\n      const check_vote = await this.prisma.vote.findUnique({\n        where: {\n          giga_vote_contributed_Id: {\n            contributed_Id: id,\n            user_id: user.id,\n          },\n        },\n      });\n\n      if (check_vote || !contributedData) {\n        throw new InternalServerErrorException('User already voted');\n      }\n      if (contributedData.contributedUserId === user.id) {\n        throw new InternalServerErrorException('User cannot vote for their own contribution');\n      }\n      const voteData = {\n        vote_type: VOTE_TYPE.UPVOTE,\n        user_id: user.id,\n        contributed_Id: id,\n        createdBy: user.id,\n      };\n\n      const points1: CreatePointDto = {\n        leaderBoardType: LeaderBoardType.GENERAL,\n        contributionType: ContributionType.VOTE,\n        isConfirmed: false,\n        isValid: false,\n        points: 1,\n        user_id: user.id,\n        createdBy: user.id,\n        season_id: null,\n        contributedDataId: id,\n      };\n      const points2: CreatePointDto = {\n        leaderBoardType: LeaderBoardType.GENERAL,\n        contributionType: ContributionType.CONTRIBUTE,\n        isConfirmed: false,\n        isValid: false,\n        points: 2,\n        user_id: contributedData.contributedUserId,\n        createdBy: user.id,\n        season_id: null,\n        contributedDataId: id,\n      };\n      if (contributedData.season_ID) {\n        points1.leaderBoardType = LeaderBoardType.SEASONAL;\n        points1.season_id = contributedData.season_ID;\n        points2.leaderBoardType = LeaderBoardType.SEASONAL;\n        points2.season_id = contributedData.season_ID;\n      }\n      const transaction = await this.prisma.$transaction([\n        this.prisma.vote.create({ data: voteData }),\n        this.prisma.points.create({ data: points1 }),\n        this.prisma.points.create({ data: points2 }),\n      ]);\n\n      this._logger.log(`User ${user.id} upvoted ${id} and successfully created points`);\n\n      return transaction;\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async downvote(id: string, user: any) {\n    try {\n      const contributedData = await this.findOne(id);\n      const check_vote = await this.prisma.vote.findUnique({\n        where: {\n          giga_vote_contributed_Id: {\n            contributed_Id: id,\n            user_id: user.id,\n          },\n        },\n      });\n      if (check_vote) {\n        throw new InternalServerErrorException('User already voted');\n      }\n      if (contributedData.contributedUserId === user.id) {\n        throw new InternalServerErrorException('User cannot vote for their own contribution');\n      }\n      const vote = await this.prisma.vote.create({\n        data: {\n          vote_type: VOTE_TYPE.DOWNVOTE,\n          user_id: user.id,\n          contributed_Id: id,\n          createdBy: user.id,\n        },\n      });\n      this._logger.log(`User ${user.id} downvoted ${id}`);\n      return vote;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async validate(id: string, isValid: boolean) {\n    try {\n      const contributedData = await this.findOne(id);\n      let transaction;\n      if (!contributedData) {\n        throw new NotFoundException('Contributed data with such ID not found');\n      }\n      if (isValid) {\n        transaction = await this.prisma.$transaction([\n          this.prisma.points.updateMany({\n            where: {\n              contributedDataId: id,\n            },\n            data: {\n              isValid: true,\n              isConfirmed: true,\n              leaderBoardType: LeaderBoardType.GLOBAL,\n            },\n          }),\n          this.prisma.contributedData.update({\n            data: { status: Status.Validated },\n            where: { contributed_UUID: id },\n          }),\n        ]);\n      } else {\n        transaction = await this.prisma.$transaction([\n          this.prisma.points.updateMany({\n            where: {\n              contributedDataId: id,\n            },\n            data: {\n              isValid: false,\n              isConfirmed: true,\n              leaderBoardType: LeaderBoardType.GLOBAL,\n            },\n          }),\n          this.prisma.contributedData.update({\n            data: { status: Status.Rejected },\n            where: { contributed_UUID: id },\n          }),\n        ]);\n      }\n      return transaction;\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n  }\n}\n","import { Injectable, InternalServerErrorException, Logger } from '@nestjs/common';\nimport { CreatePointDto } from './dto/create-point.dto';\nimport { UpdatePointDto } from './dto/update-point.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class PointsService {\n  private readonly _logger = new Logger(PointsService.name);\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(createPointDto: CreatePointDto) {\n    let point;\n    try {\n      point = await this.prisma.points.create({\n        data: createPointDto,\n      });\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n    return point;\n  }\n\n  async findAll(query: { user_id?: string; season_id?: string; createdBy?: string }) {\n    let points;\n    try {\n      points = await this.prisma.points.findMany({ where: query });\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n    return points;\n  }\n\n  async findOne(id: number) {\n    let point;\n    try {\n      point = await this.prisma.points.findUnique({\n        where: { id },\n        include: { user: true },\n      });\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n    return point;\n  }\n\n  async update(id: number, updatePointDto: UpdatePointDto) {\n    let point;\n    try {\n      point = await this.prisma.points.update({\n        where: { id },\n        data: updatePointDto,\n      });\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n    return point;\n  }\n\n  async remove(id: number) {\n    let point;\n    try {\n      point = await this.prisma.points.delete({\n        where: { id },\n      });\n    } catch (error) {\n      this._logger.error(error);\n      throw new InternalServerErrorException();\n    }\n    return point;\n  }\n}\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport { ContributeDataService } from './contribute.service';\nimport { CreateContributeDatumDto, ValidateDto } from './dto/create-contribute-datum.dto';\nimport { UpdateContributeDatumDto } from './dto/update-contribute-datum.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Public } from '../common/decorators/public.decorator';\nimport { Roles } from '../common/decorators/roles.decorator';\nimport { JwtAuthGuard } from '../auth/guards/jwt.auth.guard';\nimport { RoleGuard } from '../auth/guards/role.guard';\n\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard, RoleGuard)\n@Controller('contribute')\n@ApiTags('Contribute') // Swagger Documentation\nexport class ContributeDataController {\n  constructor(private readonly contributeDataService: ContributeDataService) {}\n\n  @Post()\n  create(@Body() createContributeDatumDto: CreateContributeDatumDto) {\n    return this.contributeDataService.create(createContributeDatumDto);\n  }\n\n  @Public()\n  @Get()\n  findAll() {\n    return this.contributeDataService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.contributeDataService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateContributeDatumDto: UpdateContributeDatumDto) {\n    return this.contributeDataService.update(id, updateContributeDatumDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.contributeDataService.remove(id);\n  }\n\n  @Roles('CONTRIBUTOR')\n  @Post('upvote/:id')\n  upvote(@Param('id') id: string, @Request() req: any) {\n    return this.contributeDataService.upvote(id, req.user);\n  }\n\n  @Roles('CONTRIBUTOR')\n  @Post('downvote/:id')\n  downvote(@Param('id') id: string, @Request() req: any) {\n    return this.contributeDataService.downvote(id, req.user);\n  }\n\n  @Roles('VALIDATOR')\n  @Post('validate/:id')\n  validate(@Param('id') id: string, @Body() ValidateDto: ValidateDto) {\n    return this.contributeDataService.validate(id, ValidateDto.isValid);\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { Status } from '@prisma/client';\nimport { IsBoolean, IsJSON, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateContributeDatumDto {\n  @ApiProperty({\n    example: '{\"key\": \"value\"}',\n    description: 'JSON value with key value pair',\n  })\n  @IsNotEmpty()\n  @IsJSON()\n  contributed_data: string;\n\n  @ApiProperty({\n    example: 'Pending',\n    enum: Status,\n  })\n  @IsOptional()\n  @IsString()\n  status?: Status;\n\n  @ApiProperty({\n    example: '1c0ebe70-f286-473c-bb9c-165db6af77c7',\n    description: 'User ID of user who contributed the data.',\n  })\n  @IsNotEmpty()\n  @IsString()\n  contributedUserId: string;\n\n  @ApiProperty({\n    example: 'school-id',\n  })\n  @IsString()\n  school_Id: string;\n\n  @ApiProperty({\n    example: 'season-id',\n  })\n  @IsString()\n  season_ID: string;\n}\n\nexport class ValidateDto {\n  @ApiProperty({\n    example: true,\n  })\n  @IsNotEmpty()\n  @IsBoolean()\n  isValid: boolean;\n}\n","import { PartialType } from '@nestjs/swagger';\nimport { CreateContributeDatumDto } from './create-contribute-datum.dto';\n\nexport class UpdateContributeDatumDto extends PartialType(CreateContributeDatumDto) {}\n","import { Module } from '@nestjs/common';\nimport { SeasonService } from './seasons.service';\nimport { SeasonController } from './seasons.controller';\n\n@Module({\n  controllers: [SeasonController],\n  providers: [SeasonService],\n})\nexport class SeasonModule {}\n","import { Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { CreateSeasonDto } from './dto/create-seasons.dto';\nimport { UpdateSeasonDto } from './dto/update-seasons.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class SeasonService {\n  constructor(private prisma: PrismaService) {}\n  private readonly _logger = new Logger(SeasonService.name);\n\n  async create(createSeasonDto: CreateSeasonDto) {\n    try {\n      const createdSeason = await this.prisma.season.create({\n        data: createSeasonDto,\n      });\n      return createdSeason;\n    } catch (error) {\n      this._logger.error(`Error while creating season: ${error}`);\n    }\n  }\n\n  async findAll() {\n    const allSeason = await this.prisma.season.findMany();\n\n    if (!allSeason) throw new NotFoundException('No season in DB');\n\n    return allSeason;\n  }\n\n  async findOne(id: string) {\n    try {\n      const oneSeason = await this.prisma.season.findUnique({\n        where: { season_id: id },\n      });\n      return oneSeason;\n    } catch (error) {\n      this._logger.error(`Error while creating season: ${error}`);\n      throw new NotFoundException(`Couldn't find season with such ID.`);\n    }\n  }\n\n  async remove(id: string) {\n    // Check if season with such ID exists\n\n    const seasonWithId = this.prisma.season.findUnique({ where: { season_id: id } });\n    if (!seasonWithId) throw new NotFoundException('No season with such id');\n\n    await this.prisma.season.delete({\n      where: { season_id: id },\n    });\n    return `Season ${id} deleted successfully.`;\n  }\n}\n","import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SeasonService } from './seasons.service';\nimport { CreateSeasonDto } from './dto/create-seasons.dto';\nimport { Public } from '../common/decorators/public.decorator';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('seasons')\n@Controller('seasons')\nexport class SeasonController {\n  constructor(private readonly seasonService: SeasonService) {}\n\n  @Public()\n  @ApiOperation({ summary: 'Create a new season' })\n  @Post()\n  create(@Body() createSeasonDto: CreateSeasonDto) {\n    return this.seasonService.create(createSeasonDto);\n  }\n\n  @ApiOperation({ summary: 'Get list of all season' })\n  @Get()\n  findAll() {\n    return this.seasonService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get one season with ID' })\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.seasonService.findOne(id);\n  }\n\n  @ApiOperation({ summary: 'Delete a new season' })\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.seasonService.remove(id);\n  }\n}\n","import { IsString } from 'class-validator';\nimport { Season_Status } from '@prisma/client';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateSeasonDto {\n  @ApiProperty({\n    example: 'Summer season',\n  })\n  @IsString()\n  season_name: string;\n\n  @ApiProperty({\n    example: 'Start',\n  })\n  @IsString()\n  season_status: Season_Status;\n\n  @ApiProperty({\n    example: '2023-08-15T08:20:05.565Z',\n  })\n  @IsString()\n  season_start_date: Date;\n\n  @ApiProperty({\n    example: '2023-08-15T08:20:05.565Z',\n  })\n  @IsString()\n  season_end_date: Date;\n}\n","import { Module } from '@nestjs/common';\nimport { PointsService } from './points.service';\nimport { PointsController } from './points.controller';\n\n@Module({\n  controllers: [PointsController],\n  providers: [PointsService],\n})\nexport class PointsModule {}\n","import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PointsService } from './points.service';\nimport { CreatePointDto } from './dto/create-point.dto';\nimport { UpdatePointDto } from './dto/update-point.dto';\nimport { ApiCreatedResponse, ApiOkResponse, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { PointEntity } from './entities/point.entity';\nimport { Public } from '../common/decorators/public.decorator';\n\n@Controller('points')\n@ApiTags('Points')\nexport class PointsController {\n  constructor(private readonly pointsService: PointsService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: PointEntity })\n  async create(@Body() createPointDto: CreatePointDto) {\n    const point = await this.pointsService.create(createPointDto);\n    return point;\n  }\n\n  @Public()\n  @Get()\n  @ApiQuery({ name: 'user_id', required: false })\n  @ApiQuery({ name: 'season_id', required: false })\n  @ApiQuery({ name: 'createdBy', required: false })\n  @ApiOkResponse({ type: PointEntity, isArray: true })\n  findAll(\n    @Query('user_id') user_id: string,\n    @Query('season_id') season_id: string,\n    @Query('createdBy') createdBy: string,\n  ) {\n    let query;\n    if (user_id || season_id || createdBy) {\n      query = { user_id, season_id, createdBy };\n    }\n    return this.pointsService.findAll(query);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: PointEntity })\n  findOne(@Param('id') id: string) {\n    return this.pointsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: PointEntity })\n  update(@Param('id') id: string, @Body() updatePointDto: UpdatePointDto) {\n    return this.pointsService.update(+id, updatePointDto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: PointEntity })\n  remove(@Param('id') id: string) {\n    return this.pointsService.remove(+id);\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { LeaderBoardType, ContributionType } from '@prisma/client';\n\nexport class CreatePointDto {\n  @ApiProperty({\n    example: 1,\n  })\n  @IsNumber()\n  points: number;\n\n  @ApiProperty({\n    example: LeaderBoardType.SEASONAL,\n    enum: LeaderBoardType,\n  })\n  @IsEnum(LeaderBoardType)\n  leaderBoardType: LeaderBoardType;\n\n  @ApiProperty({\n    example: ContributionType.VOTE,\n    enum: ContributionType,\n  })\n  @IsEnum(ContributionType)\n  contributionType: ContributionType;\n\n  @ApiProperty({\n    example: true,\n  })\n  @IsBoolean()\n  isConfirmed: boolean;\n\n  @ApiProperty({\n    example: true,\n  })\n  @IsBoolean()\n  isValid: boolean;\n\n  @ApiProperty({\n    description: 'The id of the user',\n    example: '3974',\n  })\n  @IsString()\n  user_id: string;\n\n  @ApiProperty({\n    description: 'The id of the season',\n    example: '242',\n  })\n  @IsOptional()\n  @IsString()\n  season_id?: string;\n\n  @ApiProperty({\n    description: 'The id of creator user',\n    example: '545',\n  })\n  @IsOptional()\n  @IsString()\n  createdBy?: string;\n\n  @ApiProperty({\n    description: 'The id of contributed data',\n    example: '545',\n  })\n  @IsString()\n  contributedDataId: string;\n}\n","import { PartialType } from '@nestjs/swagger';\nimport { CreatePointDto } from './create-point.dto';\n\nexport class UpdatePointDto extends PartialType(CreatePointDto) {}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { ContributionType, LeaderBoardType } from '@prisma/client';\n\nexport class PointEntity {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  points: number;\n\n  @ApiProperty()\n  leaderBoardType: LeaderBoardType;\n\n  @ApiProperty()\n  contributionType: ContributionType;\n\n  @ApiProperty()\n  isConfirmed: boolean;\n\n  @ApiProperty()\n  isValid: boolean;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  season_id: string;\n\n  @ApiProperty()\n  createdBy: string;\n\n  @ApiProperty()\n  user_id: string;\n}\n","import {\n  ArgumentMetadata,\n  ArgumentsHost,\n  BadRequestException,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  PipeTransform,\n} from '@nestjs/common';\nimport { plainToInstance } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { RsException } from './exception';\nimport { PrimsaFriendlyErrorMessage } from './prisma-exception';\nimport { Prisma } from '@prisma/client';\n\n@Catch()\nexport class CustomExceptionFilter implements PipeTransform<any>, ExceptionFilter {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToInstance(metatype, value);\n    const errors = await validate(object);\n\n    if (errors.length > 0) {\n      const messages = this.getErrorMessage(errors);\n      throw new BadRequestException({\n        message: 'Validation failed',\n        errors: messages,\n        status: 400,\n      });\n    }\n    return value;\n  }\n\n  private toValidate(metatype: any): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n\n  private getErrorMessage(errors: any): Record<string, any> {\n    const result: Record<string, any> = {};\n    errors.forEach((error: any) => {\n      const constraints = error.constraints;\n      if (constraints) {\n        const property = error.property;\n        result[property] = Object.values(constraints);\n      }\n    });\n\n    return result;\n  }\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    let exceptionResponse;\n\n    const responseData = {\n      name: 'DEFAULT',\n      message:\n        'Our server is not happy. It threw an error. Please try again or contact support.' || {},\n      success: false,\n      statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n      group: '',\n      meta: null,\n      timestamp: new Date().getTime(),\n    };\n\n    function isObjectWithErrors(value: any): value is { errors: any[] } {\n      return typeof value === 'object' && value !== null && 'errors' in value;\n    }\n\n    if (exception instanceof HttpException) {\n      exceptionResponse = exception?.getResponse();\n\n      if (isObjectWithErrors(exceptionResponse)) {\n        responseData.meta = exceptionResponse?.errors ?? '';\n      } else {\n        responseData.meta = [response?.errors ?? ''];\n      }\n      responseData.name = exception.name;\n      responseData.statusCode = exception.getStatus();\n      responseData.message = exception.message;\n      responseData.group = 'HTTP';\n    } else if (exception instanceof RsException) {\n      if (isObjectWithErrors(exceptionResponse)) {\n        responseData.meta = exceptionResponse?.errors ?? '';\n      } else {\n        responseData.meta = [response?.errors ?? ''];\n      }\n      responseData.message = exception.message;\n      responseData.statusCode = exception.httpCode;\n      responseData.name = exception.name;\n      responseData.group = exception.group;\n    } else if (exception instanceof Prisma?.PrismaClientKnownRequestError) {\n      responseData.name = exception.code;\n      const prismaError = PrimsaFriendlyErrorMessage(exception);\n      responseData.message = prismaError.message;\n      responseData.statusCode = prismaError.httpCode;\n      responseData.group = 'DBERROR';\n    } else if (exception instanceof Error) {\n      responseData.name = exception.name;\n      responseData.message = exception.message;\n    } else if (typeof exception === 'string') {\n      responseData.message = exception;\n    }\n\n    response.status(responseData.statusCode).send(responseData);\n  }\n}\n","module.exports = require(\"class-transformer\");","export class RsException extends Error {\n  public code: string;\n  public name: string;\n  public httpCode: number;\n  public group: string;\n  constructor(message: string, name = 'unknown', httpCode = 500, group = '') {\n    super(message);\n    this.name = name || 'UNKNOWN';\n    this.httpCode = httpCode || 500;\n    this.group = group || '';\n  }\n}\n\nexport const ERRORS = {\n  NOT_JSON: new RsException('Invalid JSON string', 'NOT_JSON', 400, 'VALIDATION'),\n};\n","import { Prisma } from '@prisma/client';\n\nconst shortenPrismaMessage = (message: string): string => {\n  const shortMessage = message.substring(message.indexOf('→'));\n  return shortMessage.substring(shortMessage.indexOf('\\n')).replace(/\\n/g, '').trim();\n};\n\nexport const PrimsaFriendlyErrorMessage = (execption: Prisma.PrismaClientKnownRequestError) => {\n  let message = execption.message || 'Error occured';\n  let httpCode = 500;\n\n  if (execption.code === 'P2002') {\n    const field = (<[]>execption.meta.target).join('.');\n    message = `Duplicate entry in [${field}] is not allowed.`;\n  } else if (execption.code === 'P2025') {\n    httpCode = 404;\n  } else {\n    message = shortenPrismaMessage(execption.message);\n  }\n  return { message, httpCode };\n};\n","import { Logger } from '@nestjs/common';\nimport { INestApplication } from '@nestjs/common';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nexport function setupSwagger(app: INestApplication) {\n  const port = process.env.PORT;\n  const logger = new Logger('swagger setup');\n  const options = new DocumentBuilder()\n    .setTitle('GIGA NFT 2.0 API PROVIDER')\n    .setDescription('NFT2.0')\n    .setVersion('1.0.0')\n    .addBearerAuth(\n      {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n        name: 'JWT',\n        description: 'Enter JWT token',\n        in: 'header',\n      },\n      'access-token', // This name here is important for matching up with @ApiBearerAuth() in your controller!\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('/api/docs', app, document);\n  logger.log(`Swagger Documentation running on the url http://localhost:${port}/api/docs`);\n}\n","import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard as PassportAuthGaurd } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard extends PassportAuthGaurd('jwt') {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean> {\n    const isPublic = this.reflector.get<boolean>('isPublic', context.getHandler());\n\n    if (isPublic) {\n      return true;\n    }\n\n    return super.canActivate(context);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger, ValidationPipe, VersioningType } from '@nestjs/common';\nimport { NestFactory, Reflector } from '@nestjs/core';\nimport { FastifyAdapter, NestFastifyApplication } from '@nestjs/platform-fastify';\nimport helmet from '@fastify/helmet';\nimport { AppModule } from './app.module';\nimport { CustomExceptionFilter } from './utils/exceptions/exception.filter';\nimport { setupSwagger } from './swagger';\nimport { AuthGuard } from './auth/guards/auth.global.guard';\n\nasync function bootstrap() {\n  const logger = new Logger('bootstrap');\n  const app = await NestFactory.create<NestFastifyApplication>(\n    AppModule,\n    new FastifyAdapter({ logger: false }),\n  );\n  const reflector = app.get(Reflector);\n  const port = process.env.PORT || 3000;\n  await app.register(helmet);\n  app.enableCors();\n  app.useGlobalPipes(\n    new ValidationPipe({\n      transform: true,\n      whitelist: true,\n      forbidNonWhitelisted: true,\n    }),\n  );\n  app.setGlobalPrefix('api').enableVersioning({\n    type: VersioningType.URI,\n    defaultVersion: '1',\n  });\n  // Custom Exception Filter\n  app.useGlobalFilters(new CustomExceptionFilter());\n  // set Global Guard\n  app.useGlobalGuards(new AuthGuard(reflector));\n  // Api Docs\n  setupSwagger(app);\n  await app.listen(port, '0.0.0.0');\n  logger.log(`Application listening on port ${port}`);\n}\nbootstrap();\n"],"names":[],"sourceRoot":""}