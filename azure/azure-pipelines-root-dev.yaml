trigger:
  branches:
    include:
    - dev
    - dev-azure-devops
  paths:
    include:
    - apps/**

pool:
  vmImage: ubuntu-latest

variables:
  containerRegistryServiceConnection: $(ACR_SERVICE_CONNECTION)
  imageTag: '$(Build.BuildId)'
  system.debug: true
  kubernetesServiceConnection: GIGA-BLOCKS-OOI-DEV-uni-ooi-giga-aks-dev-ictd-ooi-giga-blocks-dev-1709541823849
  kubernetesNamespace: ictd-ooi-giga-blocks-dev
  CI: false
#  env_dev: $(ENV_DEV)

stages:
- stage: Build
  displayName: 'GIGA Blocks root build'
  jobs:
  - job: Build
    displayName: 'GIGA Blocks root build job'

    steps:
    - checkout: self
      fetchTags: true

    - task: DownloadSecureFile@1
      inputs:
        secureFile: '.env.dev.giga-blocks'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '.env.dev.giga-blocks'
        TargetFolder: '$(Build.SourcesDirectory)'

    - script: |
        mv .env.dev.giga-blocks .env
      displayName: 'create .env file'

    #- script: |
    #    touch ./.env && echo "$(env_dev)" >> ./.env
    #  displayName: 'import env file'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Use Node.js'

    - script: |
        npm install -g pnpm
        pnpm install
        pnpm run api:app:generate
        pnpm run api:news:generate
        pnpm build
      displayName: 'install dependencies and build apps'

    - task: Docker@2
      displayName: Login to container Registry
      inputs:
        command: login
        containerRegistry: $(containerRegistryServiceConnection)

    - task: Docker@2
      displayName: Build and push API image to container registry
      inputs:
        command: buildAndPush
        repository: 'giga-blocks-root-api'
        dockerfile: './Dockerfile.api'
        containerRegistry: $(containerRegistryServiceConnection)
        tags: |
          $(imageTag)

    - task: Docker@2
      displayName: Build and push admin image to container registry
      inputs:
        command: buildAndPush
        repository: 'giga-blocks-root-admin'
        dockerfile: './Dockerfile.admin'
        containerRegistry: $(containerRegistryServiceConnection)
        tags: |
          $(imageTag)

    - task: Docker@2
      displayName: Build and push web image to container registry
      inputs:
        command: buildAndPush
        repository: 'giga-blocks-root-web'
        dockerfile: './Dockerfile.web'
        containerRegistry: $(containerRegistryServiceConnection)
        tags: |
          $(imageTag)

- stage: Deploy
  displayName: 'GIGA Blocks deploy'
  jobs:
  - job: Deploy
    displayName: GIGA Blocks deploy job
    steps:
    - task: HelmDeploy@0
      displayName: 'Add the Postgresql dependency repository'
      enabled: true
      inputs:
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesServiceConnection)
        command: 'repo'
        arguments: 'add postgresql https://charts.bitnami.com/bitnami'
        namespace: $(kubernetesNamespace)


    - task: HelmDeploy@0
      displayName: 'Deploy the development Giga Blocks application'
      inputs:
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesServiceConnection)
        command: upgrade
        chartType: FilePath
        chartPath: $(Build.SourcesDirectory)/helm
        releaseName: "giga-blocks"
        valueFile: helm/values.dev.yaml
        namespace: $(kubernetesNamespace)
        arguments: >
          --dependency-update
          --set api.image.tag=$(imageTag)
          --set web.image.tag=$(imageTag)
          --set admin.image.tag=$(imageTag)
